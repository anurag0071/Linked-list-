// A simple C program for traversal of a linked list
#include <stdio.h>
#include <stdlib.h>

struct Node {
	int val;
	struct Node* left;
	struct Node* right;
};


// This function prints contents of linked list starting from
// the given node
void inorder(struct Node* root)
{
    if(root==NULL)
    return;
    inorder(root->left);
    printf("%d\t",root->val);
    inorder(root->right);
}
void preorder(struct Node* root)
{
    if(root==NULL)
    return;
    printf("%d\t",root->val);
    preorder(root->left);
    preorder(root->right);
}
void postorder(struct Node* root)
{
    if(root==NULL)
    return;
    postorder(root->left);
    postorder(root->right);
    printf("%d\t",root->val);
}

struct Node* create()
{
	int x;
	// allocate 3 nodes in the heap
	struct Node* newnode;
	newnode = (struct Node*)malloc(sizeof(struct Node));
	printf("Enter data");
	scanf("%d",&x);
	if(x==-1)
	{return 0;}
	newnode->val=x;
	printf("Enter left child of %d\n", x);
	newnode->left=create();
	printf("Enter right child of %d\n", x);
	newnode->right=create();
	return newnode;
}
int main()
{
	struct Node* root;
	root=0;
	root=create();
	printf("preorder is:- ");
	preorder(root);
	printf("inorder is:- ");
	inorder(root);
	printf("postorder is:- ");
	postorder(root);
	return 0;
}
